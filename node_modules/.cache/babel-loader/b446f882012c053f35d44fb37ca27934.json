{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport Layout from '../components/MyLayout.js';\nimport Link from 'next/link';\n\nfunction getPosts() {\n  return [{\n    id: 'hello-nextjs',\n    title: 'Hello Next.js'\n  }, {\n    id: 'learn-nextjs',\n    title: 'Learn Next.js is awesome'\n  }, {\n    id: 'deploy-nextjs',\n    title: 'Deploy apps with ZEIT'\n  }];\n}\n\nvar Index = function Index(props) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, \"Batman TV Shows\"), React.createElement(\"ul\", null, props.shows.map(function (_ref) {\n    var show = _ref.show;\n    return React.createElement(\"li\", {\n      key: show.id\n    }, React.createElement(Link, {\n      as: \"/p/\".concat(show.id),\n      href: \"/post?id=\".concat(show.id)\n    }, React.createElement(\"a\", null, show.name)));\n  })));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["/Users/sidaksinghaulakh/Dev/next-init/pages/index.js"],"names":["Layout","Link","getPosts","id","title","Index","props","shows","map","show","name","getInitialProps","fetch","res","json","data","console","log","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,QAAT,GAAoB;AAChB,SAAO,CACL;AAAEC,IAAAA,EAAE,EAAE,cAAN;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GADK,EAEL;AAAED,IAAAA,EAAE,EAAE,cAAN;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAFK,EAGL;AAAED,IAAAA,EAAE,EAAE,eAAN;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAHK,CAAP;AAKD;;AAGH,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACV,oBAAC,MAAD,QACI,kDADJ,EAEI,gCACKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB;AAAA,QAAEC,IAAF,QAAEA,IAAF;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACN;AAAd,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,eAAQM,IAAI,CAACN,EAAb,CAAR;AAA2B,MAAA,IAAI,qBAAcM,IAAI,CAACN,EAAnB;AAA/B,OACI,+BAAIM,IAAI,CAACC,IAAT,CADJ,CADJ,CADa;AAAA,GAAhB,CADL,CAFJ,CADU;AAAA,CAAd;;AAeAL,KAAK,CAACM,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACFC,KAAK,CAAC,8CAAD,CADH;;AAAA;AACdC,UAAAA,GADc;AAAA;AAAA,iBAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEdC,UAAAA,IAFc;AAIpBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJoB,2CAMb;AACHX,YAAAA,KAAK,EAAEQ;AADJ,WANa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAWA,eAAeV,KAAf","sourcesContent":["import Layout from '../components/MyLayout.js'\nimport Link from 'next/link'\n\nfunction getPosts() {\n    return [\n      { id: 'hello-nextjs', title: 'Hello Next.js' },\n      { id: 'learn-nextjs', title: 'Learn Next.js is awesome' },\n      { id: 'deploy-nextjs', title: 'Deploy apps with ZEIT' }\n    ]\n  }\n  \n\nconst Index = (props) => (\n    <Layout>\n        <h1>Batman TV Shows</h1>\n        <ul>\n            {props.shows.map(({show}) => (\n                <li key={show.id}>\n                    <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n                        <a>{show.name}</a>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    </Layout>\n)\n\nIndex.getInitialProps = async function() {\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n    const data = await res.json()\n\n    console.log(`Show data fetched. Count: ${data.length}`)\n\n    return {\n        shows: data\n    }\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}